// Iteration 1: All directors? - Get the array of all directors.
fuction getAllDirectors(movies) {
  
  return movies.map(movies=> movies.director);

// _Bonus_: 1.1
function getUniqueDirectors(movies) {
  return [...new Set(getAllDirectors(movies))];
}

// Iteration 2: Steven Spielberg. The best? - How many drama movies did STEVEN SPIELBERG direct?
function howManyMovies(movies) {
  return movies.filter(movie => 
    movie.director === "Steven Spielberg" && movie.genre.includes("Drama")
  ).length;
}

// Iteration 3: All scores average - Get the average of all scores with 2 decimals
function scoresAverage(movies) {
  if (movies.length === 0) return 0;

  const totalScore = movies.reduce((sum, movie) => sum + (movie.score || 0), 0);
  return parseFloat((totalScore / movies.length).toFixed(2));
}

// Iteration 4: Drama movies - Get the average of Drama Movies
function dramaMoviesScore(movies) {
  const dramaMovies = movies.filter(movie => movie.genre.includes("Drama"));
  return scoresAverage(dramaMovies);
}

// Iteration 5: Ordering by year - Order by year, ascending (in growing order)
function orderByYear(moviesArray){
  return moviesArray.sort((a,b)=>{
    if (a.year!==b.year){
      return a.year-b.year
    }
    else{
      return a.title.localeCompare(b.title)
    }
  })
 }
console.log(orderByYear(movies))

// Iteration 6: Alphabetic Order - Order by title and print the first 20 titles
function orderAlphabetically(movies) {
  return movies.map(movie => movie.title).sort().slice(0, 20);
}

// BONUS - Iteration 7: Time Format - Turn duration of the movies from hours to minutes
function turnHoursToMinutes(moviesArray) {
  return moviesArray.map(movie => {
    const duration = movie.duration;
    let minutes = 0;
    const hoursMatch = duration.match(/(\d+)h/); 
    const minutesMatch = duration.match(/(\d+)min/); 

    if (hoursMatch) minutes += parseInt(hoursMatch[1]) * 60; 
    if (minutesMatch) minutes += parseInt(minutesMatch[1]); 
    return { ...movie, duration: minutes }; 
  });
}
console.log(turnHoursToMinutes(movies));

// BONUS - Iteration 8: Best yearly score average - Best yearly score average
function bestYearAvg(moviesArray) {
  if (moviesArray.length === 0) return null; 
  const yearScores = {};
  moviesArray.forEach(movie => {
    if (!yearScores[movie.year]) {
      yearScores[movie.year] = { totalScore: 0, count: 0 };
    }
    yearScores[movie.year].totalScore += movie.score;
    yearScores[movie.year].count++;
  });

  let bestYear = null;
  let bestAvg = 0;
  for (const year in yearScores) {
    const avgScore = yearScores[year].totalScore / yearScores[year].count;
    if (avgScore > bestAvg || (avgScore === bestAvg && year < bestYear)) {
      bestAvg = avgScore;
      bestYear = year;
    }
  }

  return `The best year was ${bestYear} with an average score of ${bestAvg.toFixed(1)}`;
}
console.log(bestYearAvg(movies));



